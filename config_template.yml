# In the following, please fill the fields as you need them.
# Do not use quotes, just plain text: e.g.:
# sql:
 # dbtype: sqlite
# etc.

sql:
    dbtype:   # either "sqlite" or "mysql"
    host:     # if dbtype = mysql, provide host
    user:     # if dbtype = mysql, provide user
    passwd:   # if dbtype = mysql, provide password
    dbname:   # provide a name for the database.

# If you wish to save certain twitter user details, please indicate the SQL data
# type you wish to save it as in the SQL database. If you do not wish to save
# a certain detail, just leave it empty like so:
# twitter_user_details:
    # contributors_enabled: TINYINT
    # created at:
# This will save the detail "contributors_enabled" as booelan / tinyint into the
# database but it will not save "created_at" at all.

# TODO: add descriptions for user_details
# TODO: add support for db types

twitter_user_details:
    contributors_enabled:  # TINYINT(1)
    created_at:  # DATETIME #REALLY
    default_profile:  # TINYINT(1)
    default_profile_image:  # TINYINT(1)
    description:  # TEXT (contains a dict)
    entities.description.urls:  # TEXT
    entities.url.urls:  # TEXT (contains a dict)
    favourites_count:  # BIGINT(30)
    follow_request_sent:  # TINYINT(1)
    followers_count:  # BIGINT(30)
    following:  # TINYINT(1)
    friends_count:  # BIGINT(30)
    geo_enabled:  # TINYINT(1)
    has_extended_profile:  # TINYINT(1)
    id:  # BIGINT(30) PRIMARY KEY
    id_str:  # VARCHAR(30) #REALLY
    is_translation_enabled:  # TINYINT(1)
    is_translator:  # TINYINT(1)
    lang:  # VARCHAR(10) #REALLY
    listed_count:  # BIGINT(30)
    location:  # TEXT
    name:  # VARCHAR (50) #REALLY
    needs_phone_verification:  #TINYINT(1)
    notifications:  # TINYINT(1)
    profile_background_color:  # CHAR(6) (is a Hex Color Code) #REALLY
    profile_background_image_url:  # TEXT
    profile_background_image_url_https:  # TEXT
    profile_background_tile:  # TINYINT(1)
    profile_banner_url:  # TEXT
    profile_image_url:  # TEXT
    profile_image_url_https:  # TEXT
    profile_link_color:  # CHAR(6) (is a Hex Color Code) #REALLY
    profile_sidebar_border_color:  # CHAR(6) (is a Hex Color Code) #REALLY
    profile_sidebar_fill_color:  # CHAR(6) (is a Hex Color Code) #REALLY
    profile_text_color:  # CHAR(6) (is a Hex Color Code) #REALLY
    profile_use_background_image:  # TINYINT(1)
    protected:  # TINYINT(1)
    screen_name:  # VARCHAR(50) #REALLY
    status.contributors:  # DE FACTO NON EXISTENT
    status.coordinates:  # TEXT (contains a dict)
    status.coordinates.coordinates:  # DE FACTO NON EXISTENT
    status.coordinates.type:  # DE FACTO NON EXISTENT
    status.created_at:  # DATETIME #REALLY
    status.entities.hashtags:  # TEXT (contains a dict)
    status.entities.media:  # TEXT (contains a dict)
    status.entities.symbols:  # TEXT (contains a dict) # DE FACTO ALWAYS EMPTY
    status.entities.urls:  # TEXT (contains a dict)
    status.entities.user_mentions:  # TEXT (contains a dict)
    status.extended_entities.media:  # TEXT (contains a dict)
    status.favorite_count:  # INT(20)
    status.favorited:  # TINYINT(1)
    status.geo:  # TEXT (contains a dict)
    status.geo.coordinates:  # DE FACTO NON EXISTENT
    status.geo.type:  # DE FACTO NON EXISTENT
    status.id:  # BIGINT(50)
    status.id_str: # VARCHAR(50)
    status.in_reply_to_screen_name:  # VARCHAR(50)
    status.in_reply_to_status_id:  # BIGINT(50)
    status.in_reply_to_status_id_str:  # VARCHAR(50)
    status.in_reply_to_user_id:  # BIGINT(30)
    status.in_reply_to_user_id_str:  # VARCHAR(30)
    status.is_quote_status:  # TINYINT(1)
    status.lang:  # VARCHAR(10) #REALLY
    status.place:  # TEXT (contains a dict)
    status.place.bounding_box.coordinates: # DE FACTO NON EXISTENT
    status.place.bounding_box.type:  # DE FACTO NON EXISTENT
    status.place.contained_within:  # DE FACTO NON EXISTENT
    status.place.country:  # DE FACTO NON EXISTENT
    status.place.country_code:  # DE FACTO NON EXISTENT
    status.place.full_name:  # DE FACTO NON EXISTENT
    status.place.id:  # DE FACTO NON EXISTENT
    status.place.name:  # DE FACTO NON EXISTENT
    status.place.place_type:  # DE FACTO NON EXISTENT
    status.place.url:  # DE FACTO NON EXISTENT
    status.possibly_sensitive:  # TINYINT(1)
    status.quoted_status_id:  # BIGINT(50)
    status.quoted_status_id_str:  # VARCHAR(50)
    status.retweet_count:  # INT(30)
    status.retweeted:  # TINYINT(1)
    status.retweeted_status.contributors:  # DE FACTO NON EXISTENT
    status.retweeted_status.coordinates:  # TEXT (contains a dict)
    status.retweeted_status.created_at:  # DATETIME #REALLY
    status.retweeted_status.entities.hashtags:  # TEXT (contains a dict)
    status.retweeted_status.entities.media:  # TEXT (contains a dict)
    status.retweeted_status.entities.symbols:  # TEXT # DE FACTO ALWAY EMPTY
    status.retweeted_status.entities.urls:  # TEXT (contains a dict)
    status.retweeted_status.entities.user_mentions:  # TEXT (contains a dict)
    status.retweeted_status.extended_entities.media: # TEXT (contains a dict)
    status.retweeted_status.favorite_count:  # INT(30)
    status.retweeted_status.favorited:  # TINYINT(1)
    status.retweeted_status.geo:  # TEXT (contains a dict)
    status.retweeted_status.id:  # BIGINT(50)
    status.retweeted_status.id_str:  # VARCHAR(50)
    status.retweeted_status.in_reply_to_screen_name:  # VARCHAR(30)
    status.retweeted_status.in_reply_to_status_id:  # BIGINT(50)
    status.retweeted_status.in_reply_to_status_id_str:  # VARCHAR(50)
    status.retweeted_status.in_reply_to_user_id:  # BIGINT(30)
    status.retweeted_status.in_reply_to_user_id_str:  # VARCHAR(30)
    status.retweeted_status.is_quote_status:  # TINYINT(1)
    status.retweeted_status.lang:  # VARCHAR(10)
    status.retweeted_status.place:  # TEXT (contains a dict)
    status.retweeted_status.possibly_sensitive:  # TINYINT(1)
    status.retweeted_status.quoted_status_id:  # BIGINT(50)
    status.retweeted_status.quoted_status_id_str:  # VARCHAR(50)
    status.retweeted_status.retweet_count:  # INT(30)
    status.retweeted_status.retweeted:  # TINYINT(1)
    status.retweeted_status.source:  # TEXT
    status.retweeted_status.text:  # TEXT
    status.retweeted_status.truncated:  # TINYINT(1)
    status.source:  # TEXT
    status.text:  # TEXT
    status.truncated:  # TINYINT(1)
    statuses_count:  # BIGINT(30)
    suspended:  # TINYINT(1)
    time_zone:  # DE FACTO NON EXISTENT
    translator_type:  # VARCHAR(50)
    url:  # TEXT
    verified:  # BOOLEAN
    utc_offset:  # DE FACTO NON EXISTENT
# NOTIFICATION EMAILS:
# ====================

email_to_notify: 'user@example.com'

# mailgun details
# (find them under the respective domain name here: https://mailgun.com/app/domains)
mailgun_default_smtp_login: ''
mailgun_api_base_url: ''
mailgun_api_key: ''
